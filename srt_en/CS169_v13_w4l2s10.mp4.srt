1
00:00:00,000 --> 00:00:04,000
Which statements are true regarding routes. They consist of both 

2
00:00:04,004 --> 00:00:06,004
a URI and an HTTP method. You need both pieces to make the route 

3
00:00:06,006 --> 00:00:10,006
unique. It must be generated using these URI helpers. It may be 

4
00:00:10,010 --> 00:00:13,010
generated by these URI helpers. Clearly B and C are not both 

5
00:00:13,013 --> 00:00:17,013
true so you know notice that they don't appear in choice, but of 

6
00:00:17,017 --> 00:00:28,017
the four choices, voting ... I'm going to call it nearly 

7
00:00:28,028 --> 00:00:32,028
unanimous for blue, module like three or four people, but let's 

8
00:00:32,032 --> 00:00:35,032
walk through which of A, B and C are true. A route consists of 

9
00:00:35,035 --> 00:00:39,035
both a URI and a method. That's absolutely true, and in fact, we 

10
00:00:39,039 --> 00:00:43,039
saw that when we did rake routes up here ... I'll just do it 

11
00:00:43,043 --> 00:00:52,043
again so we can read the output. We already saw that we have ... 

12
00:00:52,052 --> 00:00:54,052
here's two examples of routes that are distinct, right. They 

13
00:00:54,054 --> 00:00:58,054
called different controller actions. The URL part of the route 

14
00:00:58,058 --> 00:01:01,058
is the same, but the HTTP method is different, and that makes 

15
00:01:01,061 --> 00:01:05,061
them distinct. It is true that you need both the URL part and 

16
00:01:05,065 --> 00:01:10,065
the HETP methods, so A is true. What about B versus C? Well, 

17
00:01:10,070 --> 00:01:12,070
remember from the web browser's point of view, the only thing 

18
00:01:12,072 --> 00:01:15,072
the web browser knows about is URLs. It doesn't care how that 

19
00:01:15,075 --> 00:01:17,075
URL got into the view, it just cares that when you click on it, 

20
00:01:17,077 --> 00:01:21,077
it knows what URL to send you to. The idea that there's these 

21
00:01:21,081 --> 00:01:24,081
helpers to help you generate the URLs, that's a Rails thing that 

22
00:01:24,084 --> 00:01:26,084
it provides because it is nice. You don't have to use them, 

23
00:01:26,086 --> 00:01:29,086
although life is often easier if you do use them. At the end of 

24
00:01:29,089 --> 00:01:31,089
the day when it gets to the web browser, it won't make any 

25
00:01:31,091 --> 00:01:34,091
difference. The web browser has no concept of restfulness, of 

26
00:01:34,094 --> 00:01:38,094
URIs or helpers or anything like that. All it knows is you click 

27
00:01:38,098 --> 00:01:40,098
on a link, there better be an H- reft that tells me where to go. 

28
00:01:40,100 --> 00:01:41,100
That is it. 


