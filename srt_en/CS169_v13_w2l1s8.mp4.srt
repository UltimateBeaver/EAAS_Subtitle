1
00:00:00,000 --> 00:00:07,000
Okay. Pair programming. The stereotype is the programmer is

2
00:00:07,007 --> 00:00:11,007
this lone wolf working all night drinking Red Bull, right? Don't 

3
00:00:11,011 --> 00:00:15,011
bother me [ inaudible 00:00:13]. But is there a more social way 

4
00:00:15,015 --> 00:00:18,015
to program and what would be the benefits of multiple people 

5
00:00:18,018 --> 00:00:20,018
programming at the same time? How would you prevent this one 

6
00:00:20,020 --> 00:00:23,020
person from just doing all the work and the other person goes to 

7
00:00:23,023 --> 00:00:26,023
get coffee, right, and checks their mail, right? How do you 

8
00:00:26,026 --> 00:00:30,026
prevent that, right? Suppose there was a more social way and how 

9
00:00:30,030 --> 00:00:33,030
do you keep one person from dominating? That's what pair 

10
00:00:33,033 --> 00:00:37,033
programming is. The goal is to improve software quality or 

11
00:00:37,037 --> 00:00:40,037
making it get done faster by doing two people at the same time. 

12
00:00:40,040 --> 00:00:43,040
Now, it's not a natural thing to do so we want you to try it in 

13
00:00:43,043 --> 00:00:47,043
this class. Some people love it. Some students, they tried it 

14
00:00:47,047 --> 00:00:49,047
and they did their projects that way. They met every night and 

15
00:00:49,049 --> 00:00:53,049
they worked in pairs. Some companies love it. Pivotal Labs, in 

16
00:00:53,053 --> 00:00:56,053
particular, is an example. You should try this. This is a good 

17
00:00:56,056 --> 00:00:58,056
thing to do in school to see what you think about it. This is a 

18
00:00:58,058 --> 00:01:02,058
picture from Pivotal Labs. These are two employees here, Sarah 

19
00:01:02,062 --> 00:01:08,062
and JR. They sit side by side with the screens facing together. 

20
00:01:08,068 --> 00:01:13,068
To avoid distractions, this thing can distract you from paying 

21
00:01:13,073 --> 00:01:16,073
attention. There's nothing else on these machines. You can't do 

22
00:01:16,076 --> 00:01:19,076
Facebook. You can't do Twitter. You can't read email. It's just 

23
00:01:19,079 --> 00:01:24,079
workstations. They sit together and they talk and they play two 

24
00:01:24,084 --> 00:01:27,084
different roles. There's a role called the Driver, and that's 

25
00:01:27,087 --> 00:01:30,087
the person at the keyboard entering code, thinking tactically 

26
00:01:30,090 --> 00:01:33,090
about the current thoughts and explaining thoughts while typing. 

27
00:01:33,093 --> 00:01:37,093
If you've seen the medical shows with the surgeons, the surgeons 

28
00:01:37,097 --> 00:01:40,097
explain, " I'm going to cut here" - that's what the Driver's 

29
00:01:40,100 --> 00:01:43,100
doing. At the keyboard explaining what they're doing. The 

30
00:01:43,103 --> 00:01:47,103
Observer reviews each line of code, as he types in, and acts as 

31
00:01:47,107 --> 00:01:50,107
a safety net for the Driver and is thinking more strategically 

32
00:01:50,110 --> 00:01:52,110
in saying things, making suggestions to the Driver [ inaudible 

33
00:01:52,112 --> 00:01:58,112
00:01:52]. So that's the interesting roles. If the pair program 

34
00:01:58,118 --> 00:02:00,118
is working there should be lots of talking and you're 

35
00:02:00,000 --> 00:02:03,120
concentrating on the task at hand, not checking email. It's an 

36
00:02:03,123 --> 00:02:06,123
important part of pair programming that you alternate roles. You 

37
00:02:06,126 --> 00:02:08,126
don't want to have one person always be the Driver and one 

38
00:02:08,128 --> 00:02:11,128
person the Observer. Ten minutes then you swap and you go back 

39
00:02:11,131 --> 00:02:16,131
and forth. How well does this work? When it's not very 

40
00:02:16,136 --> 00:02:19,136
complicated it's quicker, pair programming. When it's 

41
00:02:19,139 --> 00:02:23,139
complicated, it yields higher quality codes and, since 

42
00:02:23,143 --> 00:02:27,143
somebody's looking at it, maybe more readable code. But some 

43
00:02:27,147 --> 00:02:30,147
studies indicate it's more effort than solo programmers, that 

44
00:02:30,150 --> 00:02:33,150
you don't get twice as much productivity from two programmers in 

45
00:02:33,153 --> 00:02:38,153
pairs as one. Now when we talked about our friends at - well let 

46
00:02:38,158 --> 00:02:40,158
me just mention that we talked to our friends at Pivotal Labs. 

47
00:02:40,160 --> 00:02:43,160
They said, " Well, I don't know. In this modern world, with 

48
00:02:43,163 --> 00:02:45,163
Facebook and Twitter and stuff, that's not factoring in the 

49
00:02:45,165 --> 00:02:47,165
distractions of the modern world. We don't get those 

50
00:02:47,167 --> 00:02:50,167
distractions. In fact, at Pivotal Labs, people come in at 9:00 

51
00:02:50,170 --> 00:02:53,170
in the morning and go home at 6:00 at night and they don't keep 

52
00:02:53,173 --> 00:02:56,173
working. And the people who have been there for three weeks, 

53
00:02:56,176 --> 00:02:58,176
they say 'I've never worked so hard in life. '"
 They're not 

54
00:02:58,178 --> 00:03:00,178
used to just concentrating all the time in the day. People go 

55
00:03:00,000 --> 00:03:04,180
home at normal times. It's not the modern Silicon Valley way of 

56
00:03:04,184 --> 00:03:08,184
managing people, which is buying dinner, right? That's the 

57
00:03:08,188 --> 00:03:11,188
advanced, " Well, if I buy them dinner they'll work longer." I'm 

58
00:03:11,191 --> 00:03:16,191
a manager, right? It's hard for me... I don't know what to say 

59
00:03:16,196 --> 00:03:19,196
about this. It may not be more effort but that's what some 

60
00:03:19,199 --> 00:03:23,199
studies say. It has this added benefit of educational benefit of 

61
00:03:23,203 --> 00:03:26,203
transferring knowledge. When two people are sitting there you 

62
00:03:26,206 --> 00:03:30,206
can learn some programming idioms from the other one or tricks 

63
00:03:30,210 --> 00:03:33,210
or tools that you hadn't heard of. Or, how this company works or 

64
00:03:33,213 --> 00:03:38,213
the latest technologies. In fact, because of this, some people 

65
00:03:38,218 --> 00:03:42,218
do pair programming... The team will swap where everybody works 

66
00:03:42,222 --> 00:03:45,222
with everybody else to form pairs. That's called promiscuous 

67
00:03:45,225 --> 00:03:50,225
pairing. The do's and don'ts. Don't, when you're an Observer, be 

68
00:03:50,230 --> 00:03:54,230
using your smartphone. It can work for people of different 

69
00:03:54,234 --> 00:03:58,234
experience; you'll both learn. A great way to learn things is to 

70
00:03:58,238 --> 00:04:01,238
try and teach it. Those of us who... If you want to become a 

71
00:04:01,241 --> 00:04:03,241
teaching assistant, that's a great way to learn things is try 

72
00:04:03,243 --> 00:04:07,243
and explaining it. Swap frequently. This is... Please swap 

73
00:04:07,247 --> 00:04:10,247
frequently. You exercise different skills when you're thinking 

74
00:04:10,250 --> 00:04:13,250
tactically versus strategically and it's a good thing to do. 


