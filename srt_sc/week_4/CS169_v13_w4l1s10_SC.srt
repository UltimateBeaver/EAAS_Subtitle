1
00:00:00,000 --> 00:00:05,000
好啦，有关Lo-Fi UI的对错判断。和3×5卡片相似， 

2
00:00:05,005 --> 00:00:10,005
相比于单纯的代码，草图与故事画板更能让所有利益相关人员都参与到设计中。

3
00:00:10,010 --> 00:00:14,010
Lo-Fi UI的目的是在你编程前查出UI的错误。

4
00:00:14,014 --> 00:00:18,014
SaaS应用程序通常含有与用户故事相关联的用户界面。

5
00:00:18,018 --> 00:00:21,018
相比于使用CSS Haml构建原型

6
00:00:21,021 --> 00:00:24,021
Lo-Fi UI将耗时更多时间，但更有可能引导UI朝

7
00:00:24,024 --> 00:00:27,024
客户喜闻乐见的方向发展。这实在很难选择，

8
00:00:27,027 --> 00:00:30,027
不是吗？如果你一直在听讲的话。如果你没有

9
00:00:30,030 --> 00:00:42,030
盯着自己的手机的话。好啦，各就各位，预备，投票。这是错误的，对吧？

10
00:00:42,042 --> 00:00:45,042
哪个是错误的？你们应该讨论一下。这些关于Lo-Fi UI的陈述里面

11
00:00:45,045 --> 00:00:53,045
哪句有错。好啦，让我们结对投票。

12
00:00:53,053 --> 00:00:56,053
各就各位，预备，投票看看这次结果如何。好，

13
00:00:56,056 --> 00:00:59,056
这确实起作用了，这里很大部分都选的是蓝色选项。

14
00:00:59,059 --> 00:01:04,059
让我们逐个讲解答案。相比于代码，3×5卡片与草图以及故事画板

15
00:01:04,064 --> 00:01:07,064
更能调动每个人参与其中。这很重要，

16
00:01:07,067 --> 00:01:11,067
因为你要做……这有助于我们做出人们、

17
00:01:11,071 --> 00:01:15,071
客户们最终需要的产品。

18
00:01:15,075 --> 00:01:18,075
在编程前，我们可以随意扔掉或随时抓起一沓

19
00:01:18,078 --> 00:01:20,078
纸完成查错。这会减少大量工作。

20
00:01:20,080 --> 00:01:24,080
SaaS应用程序通常含有用户界面、故事

21
00:01:24,084 --> 00:01:30,084
以及……也许同学们可以迅速完成一些内容，

22
00:01:30,090 --> 00:01:33,090
不过我们觉得，相比于使用Haml处理，

23
00:01:33,093 --> 00:01:39,093
Lo-Fi UI耗费的时间更少。所以错误选项是四号。
