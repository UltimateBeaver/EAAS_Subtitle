1
00:00:00,000 --> 00:00:06,000
我们来整理一下BDD，BDD看起来就像一组相当简单的想法，

2
00:00:06,006 --> 00:00:10,006
解释起来就是常识。

3
00:00:10,010 --> 00:00:13,010
我们必须看到你们是否遵循它们，但在这里有很多陷阱。

4
00:00:13,013 --> 00:00:17,013
第一个陷阱是因为我们正在谈论用户界面，

5
00:00:17,017 --> 00:00:22,017
以及如何协助编码。

6
00:00:22,022 --> 00:00:26,022
你已经开始会见客户，了解原因…

7
00:00:26,026 --> 00:00:28,026
当你看到一张3x5卡片，拿给客户看，

8
00:00:28,028 --> 00:00:30,028
他们不认为它已经实施了，对吗？给他们一张纸的内容。

9
00:00:30,030 --> 00:00:34,030
如果你模拟出你的使用界面，

10
00:00:34,034 --> 00:00:40,034
对你而言使用Hamel做一个屏幕，

11
00:00:40,040 --> 00:00:42,040
然后放上去更容易。客户容易认为你已经建造完成，

12
00:00:42,042 --> 00:00:45,042
并默默地做了改变。

13
00:00:45,045 --> 00:00:47,045
直到项目后期，当他们说，

14
00:00:47,047 --> 00:00:49,047
“不，我不喜欢使用界面”，然后让你重新开始，你就会说，

15
00:00:49,049 --> 00:00:51,049
“你为什么不早说，他们有点被代码吓到。”

16
00:00:51,051 --> 00:00:56,051
紧握那张纸，用铅笔或蜡笔画出模拟图，

17
00:00:56,056 --> 00:01:02,056
让他们不怕去改变它。

18
00:01:02,062 --> 00:01:05,062
相关的一点就是画草图，但不做故事板。

19
00:01:05,065 --> 00:01:09,065
用户界面涉及所有这些页面之间的交互，

20
00:01:09,069 --> 00:01:13,069
你希望在你花时间创建内容还有故事板之前，

21
00:01:13,073 --> 00:01:16,073
客户能同意它们之间的关联方式。

22
00:01:16,076 --> 00:01:19,076
如果你真的，如果你去YouTube网站

23
00:01:19,079 --> 00:01:22,079
查找用户故事，甚至有人花时间

24
00:01:22,082 --> 00:01:26,082
用它做一部停止动作电影，并一直说你也能做到。

25
00:01:26,086 --> 00:01:28,086
我不认为他们会…他们不会想用

26
00:01:28,088 --> 00:01:36,088
粘贴、颜色、彩色蜡笔和贴纸停止动作。

27
00:01:36,096 --> 00:01:38,096
他们会认为那是一个真实的用户界面

28
00:01:38,098 --> 00:01:41,098
只是动画化了，然后任由我更改。

29
00:01:41,101 --> 00:01:45,101
做点什么给他们看，确保你提前得到信息。

30
00:01:45,105 --> 00:01:50,105
现在，Agile被发明出来，

31
00:01:50,110 --> 00:01:53,110
试图阻止的更传统的软件陷阱，

32
00:01:53,113 --> 00:01:55,113
是程序员或开发人员想出一些自认为很棒的功能，

33
00:01:55,115 --> 00:01:58,115
对吗？天啊，他们认为很棒，

34
00:01:58,118 --> 00:02:01,118
是因为他们觉得编程起来会很有趣，而且认为客户

35
00:02:01,121 --> 00:02:06,121
也一定会喜欢的，但是当被客户拒绝时，

36
00:02:06,126 --> 00:02:13,126
他们知道自己错了。客户并不真的想要。

37
00:02:13,133 --> 00:02:17,133
BDD的关键就是联系客户，在你写代码之前

38
00:02:17,137 --> 00:02:21,137
确定你要写的内容。

39
00:02:21,141 --> 00:02:27,141
你所写的内容很重要。我们希望努力避免精力浪费。

40
00:02:27,147 --> 00:02:30,147
企图预测你所需要的或者你认为会很酷的东西，

41
00:02:30,150 --> 00:02:33,150
不要那样做，听客户的要求，不要浪费时间。

42
00:02:33,153 --> 00:02:38,153
另一个问题或缺陷，它们之所以是陷阱

43
00:02:38,158 --> 00:02:42,158
是因为它们很容易发生，即使他们发生了，

44
00:02:42,162 --> 00:02:45,162
是在你完成乐观路径时，以为工作就完成了，对吗？

45
00:02:45,165 --> 00:02:48,165
你为每个特性都做了乐观路径，所以似乎工作就结束了。

46
00:02:48,168 --> 00:02:53,168
但是你需要一个悲观路径，如同需要乐观路径一样。

47
00:02:53,173 --> 00:02:56,173
从客户的角度看，它与特性一样重要，

48
00:02:56,176 --> 00:03:05,176
有效的时候，但是当用户犯错误时，

49
00:03:05,185 --> 00:03:10,185
它没有反应，对吗？它将记录空信息。

50
00:03:10,190 --> 00:03:13,190
对人类的研究表明我们有犯错误的权利。

51
00:03:13,193 --> 00:03:17,193
你会听到一个问答，而我说错了词，

52
00:03:17,197 --> 00:03:19,197
我们明明知道正确的单词却还是用错。

53
00:03:19,199 --> 00:03:24,199
人类有犯错误的权利，会犯错的才是人类。

54
00:03:24,204 --> 00:03:29,204
成功构建一个应用程序需要确保同时拥有悲观路径和乐观路径。

55
00:03:29,209 --> 00:03:33,209
另一方面，阻止悲观路径。

56
00:03:33,213 --> 00:03:36,213
我的应用程序有多少种出错方式？

57
00:03:36,216 --> 00:03:38,216
可以有数百万个错误，不限数量的。

58
00:03:38,218 --> 00:03:41,218
如果你开始看到用户故事，然后我不应该看到这个，

59
00:03:41,221 --> 00:03:44,221
不应该看到那个。你有很多不应该看到的步骤。

60
00:03:44,224 --> 00:03:46,224
请注意，这个数字多到令你难以置信。

61
00:03:46,226 --> 00:03:49,226
你需要做一些悲观路径，

62
00:03:49,229 --> 00:03:54,229
但你无法预测到所有可能出现的错误。

63
00:03:54,234 --> 00:03:58,234
然后，另一方面是当你正在寻找正面期望时，

64
00:03:58,238 --> 00:04:02,238
比如在电影页面，你必须小心谨慎，

65
00:04:02,242 --> 00:04:06,242
所以我应该能看到电影艾玛。根据你的用户界面，

66
00:04:06,246 --> 00:04:10,246
电影的名字可能会出现在页面的许多地方，

67
00:04:10,250 --> 00:04:13,250
所以就算图片无效，你也可以通过。

68
00:04:13,253 --> 00:04:18,253
这不是我们想要的结果。你该怎么办？Capybara有一些，如果你看到了约束，

69
00:04:18,258 --> 00:04:22,258
关于Capybara的文档，有一些辅助函数可以帮助你缩小

70
00:04:22,262 --> 00:04:24,262
你可以观看的页面部分的重点。

71
00:04:24,264 --> 00:04:29,264
在这个例子中，我应该看到艾玛在这个购物车区域里。

72
00:04:29,269 --> 00:04:35,269
我们希望通过温习这些陷阱，

73
00:04:35,275 --> 00:04:42,275
减少大家落入陷阱的几率。在此之后，

74
00:04:42,282 --> 00:04:46,282
我们来看看其他纯粹指令。关于Lo-FI用户界面和BDD，

75
00:04:46,286 --> 00:04:51,286
哪个描述是错误的？Lo – Fi用户界面方法的目的

76
00:04:51,291 --> 00:04:54,291
是在编程之前调试用户界面。BDD的缺点

77
00:04:54,294 --> 00:04:59,294
是要求不断与客户联系，这可能做不到。

78
00:04:59,299 --> 00:05:03,299
BDD的一个缺点是它可能会造成糟糕的软件架构，

79
00:05:03,303 --> 00:05:07,303
因为重点在于行为。全部没错，以上三个描述都对。

80
00:05:07,307 --> 00:05:10,307
我想我遇到过。

