1
00:00:00,000 --> 00:00:06,000
借助它，让我们打碎我们的程序，然后问问哪个是无法

2
00:00:06,006 --> 00:00:09,006
分解的部分。我们会索要SOFA准则；

3
00:00:09,009 --> 00:00:13,009
总之做一件事，少设几个参数，坚持相同的抽象级别。

4
00:00:13,013 --> 00:00:19,013
单元测试时最重要的是哪一项？

5
00:00:19,019 --> 00:00:24,019
你们认为这四件事里，哪个对单元测试最重要？

6
00:00:24,024 --> 00:00:28,024
你们为什么不找找自己的卡片或iPod， 

7
00:00:28,028 --> 00:00:34,028
然后想一会儿呢？你们准备好投票了吗？

8
00:00:34,034 --> 00:00:36,034
我确信我们肯定要对此讲一番。准备好啦，

9
00:00:36,036 --> 00:00:43,036
开始投票。我们有许多选绿色的，然后是蓝色和粉色。

10
00:00:43,043 --> 00:00:50,043
为什么你们不先讨论讨论，然后再给出我的意见。让我们作为合作人再次投票。

11
00:00:50,050 --> 00:00:56,050
举起卡片，嘿呀，这儿有好多选绿色项的。

12
00:00:56,056 --> 00:01:02,056
现在有个很可怕的期中考试问题，

13
00:01:02,062 --> 00:01:05,062
因为这基本上是阿曼多和我的意见，

14
00:01:05,065 --> 00:01:07,065
你们也许可以为这两个人找个理由，不过

15
00:01:07,067 --> 00:01:11,067
我们会告诉大家我们在想什么。简短讲一下如何，这些选项中你们没选的是哪一个？

16
00:01:11,071 --> 00:01:14,071
哦，它可以很长，只要它是一行行的代码，

17
00:01:14,074 --> 00:01:17,074
就很容易测试。

18
00:01:17,077 --> 00:01:21,077
坚持同一抽象级别如何？这可以使代码更易理解。

19
00:01:21,081 --> 00:01:24,081
即便人类很难理解，实际上

20
00:01:24,084 --> 00:01:27,084
测试它还是很容易的。

21
00:01:27,087 --> 00:01:32,087
这里的最后两项；做一件事情。是呀，

22
00:01:32,092 --> 00:01:37,092
这可能有助于测试，不过如果每件事都很简单，

23
00:01:37,097 --> 00:01:41,097
那要测试它仍很简单。实际上我们争议的是少设几个参数，

24
00:01:41,101 --> 00:01:46,101
如果参数真的有关系，那么参数越多， 

25
00:01:46,106 --> 00:01:50,106
测试用例就越多。如果参数只是多少放

26
00:01:50,110 --> 00:01:55,110
入公式，在方法中没什么作用， 

27
00:01:55,115 --> 00:01:58,115
计算公式时这不会太糟糕。

28
00:01:58,118 --> 00:02:02,118
我想这个问题的重点在于你认为哪方面

29
00:02:02,122 --> 00:02:06,122
会对测试造成影响。争论使用几个参数

30
00:02:06,126 --> 00:02:09,126
做一件事，我觉得，以我们的经验看，我们

31
00:02:09,129 --> 00:02:12,129
认为参数可以使双向的，不过你当然找得到示例代码，

32
00:02:12,132 --> 00:02:16,132
这会是个强有力的证据，

33
00:02:16,136 --> 00:02:18,136
对这些东西中任一项来说，哪个比其他的更重要，

34
00:02:18,138 --> 00:02:20,138
不过这是一种看法……。

