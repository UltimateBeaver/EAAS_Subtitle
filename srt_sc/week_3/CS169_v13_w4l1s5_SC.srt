1
00:00:00,000 --> 00:00:05,000
好啦。行为驱动设计的下一步是，怎样记录我们的项目。

2
00:00:05,005 --> 00:00:11,005
这看起来有点像[无声00:00:12]Agile，这一毫无压力的

3
00:00:11,011 --> 00:00:16,011
软件开发始终在正式团队与Scrum团队

4
00:00:16,016 --> 00:00:19,016
等等的范围内开展。我们要如何在Agile 

5
00:00:19,019 --> 00:00:22,019
内做计划？如果有现成的计划，要如何

6
00:00:22,022 --> 00:00:26,022
估算时间，还有我们能否使用用户故事？

7
00:00:26,026 --> 00:00:29,026
这看上去是个大问题，如果我们可以运用用户故事， 

8
00:00:29,029 --> 00:00:34,029
有哪些工具可供使用？所以衡量生产力时，如果我们试着

9
00:00:34,034 --> 00:00:37,034
每周使用用户故事，问题是……

10
00:00:37,037 --> 00:00:39,037
这看上去没错，可实际上他们中有些内容和其他内容相比难太多了。

11
00:00:39,039 --> 00:00:43,039
所以如果你拿完成1个困难的用户故事与完成三个简单的做比较，

12
00:00:43,043 --> 00:00:48,043
你做的好不好呢？所以这种情况的火箭级科学解决方案是什么呢？

13
00:00:48,048 --> 00:00:52,048
我们要做的是给每个用户故事分配点数。

14
00:00:52,052 --> 00:00:56,052
好啦，这样如何，直接编程就是1，中等难度就是2， 

15
00:00:56,056 --> 00:01:00,056
非常难就是3。好啦。这儿有个好主意， 

16
00:01:00,000 --> 00:01:03,060
与其去数用户故事，不如我们数数点数，

17
00:01:03,063 --> 00:01:07,063
然后团队会补充每个用户故事的点数。

18
00:01:07,067 --> 00:01:09,067
所谓速度，从打它出现在幻灯片上开始，我们就提过好几次， 

19
00:01:09,069 --> 00:01:14,069
这就是一个团队每周完成的点数平均值。

20
00:01:14,074 --> 00:01:18,074
所以这个系统的精萃就在于你可以

21
00:01:18,078 --> 00:01:22,078
确认团队的点数，评估你的故事， 

22
00:01:22,082 --> 00:01:25,082
然后你的团队就会指出你每周要完成多少点数，

23
00:01:25,085 --> 00:01:29,085
然后在你评估用户故事得出点数后，给定点数的记录平均值，

24
00:01:29,089 --> 00:01:31,089
这样你就能猜到有多少工作……

25
00:01:31,091 --> 00:01:34,091
要过多长时间你才能完成你想做的剩余用户故事。

26
00:01:34,094 --> 00:01:37,094
这就是好主意。那么你实际上怎样

27
00:01:37,097 --> 00:01:41,097
分配点数呢？所以通常我们以1、2、3

28
00:01:41,101 --> 00:01:44,101
开始，这是个不错的起点，在[无声00:01:43]之后，

29
00:01:44,104 --> 00:01:48,104
你会有5甚至8点，所以Pivotal Labs（派福托实验室）的工作人员会就此编码，

30
00:01:48,108 --> 00:01:53,108
斐波那契比例就是他们使用的工具， 

31
00:01:53,113 --> 00:01:56,113
即便是Pivotal Labs，很多年来坚持这样做的公司，

32
00:01:56,116 --> 00:02:00,116
8都非常罕见。你实际怎样分配点数呢？你们收集日常Scrum时，

33
00:02:00,000 --> 00:02:03,120
你们可以聊聊用户故事，它是1、2、3， 

34
00:02:03,123 --> 00:02:07,123
举起右手手指了吗？然后你将他们平均，

35
00:02:07,127 --> 00:02:10,127
看看他们都做什么。这是2或3抑或类似的什么东西。

36
00:02:10,130 --> 00:02:14,130
现在如果1个人说2表示难度也就中等，可有个人说

37
00:02:14,134 --> 00:02:18,134
5表示十分困难，你不只要平均这些数值，

38
00:02:18,138 --> 00:02:21,138
你要做的是停下来然后……对此可能仁者见仁，智者见智。

39
00:02:21,141 --> 00:02:24,141
这就是我们讲的事情之一。

40
00:02:24,144 --> 00:02:27,144
在假设方面会有出入，在经验方面会有出入，经验会使他们想， 

41
00:02:27,147 --> 00:02:30,147
哇哦，这实在简单或这实在困难。

42
00:02:30,150 --> 00:02:33,150
所以你要在[无声00:02:34]之前就说出来讲明白。

43
00:02:33,153 --> 00:02:38,153
我的建议是，如果有些内容大于5，

44
00:02:38,158 --> 00:02:41,158
你应该把它划分成更简单的用户故事。

45
00:02:41,161 --> 00:02:45,161
你不想把这么个大怪物留在没人处理的待做事项里吧， 

46
00:02:45,165 --> 00:02:48,165
这会耽误很长一段时间，所以在你继续时把它分解成较小的故事。

47
00:02:48,168 --> 00:02:52,168
像我之前说过的那样，速度是自我评估。

48
00:02:52,172 --> 00:02:56,172
有助于确定你的团队有多快、工作会消耗你多少点数， 

49
00:02:56,176 --> 00:03:00,176
这就像是在面对货币，只要你保持加班加点，

50
00:03:00,000 --> 00:03:02,180
你是每周完成5点抑或10点， 

51
00:03:02,182 --> 00:03:05,182
这并不重要，又或者你想感觉更好， 

52
00:03:05,185 --> 00:03:07,185
你可以使这个点数……给自己许多点数.

53
00:03:07,187 --> 00:03:11,187
实际上['突然哇' 00:03:08]我们一周完成30点。没错，你会觉得

54
00:03:11,191 --> 00:03:14,191
……得到酒吧向你的朋友们吹嘘一翻。

55
00:03:14,194 --> 00:03:17,194
不过这都是自我评估。只要你保持不变，这就会帮你预测

56
00:03:17,197 --> 00:03:21,197
你正在做什么，使你明了这就是你要做的事。

57
00:03:21,201 --> 00:03:25,201
现在，再来一次，这个想法很简单。不过

58
00:03:25,205 --> 00:03:28,205
要是我们不必自行计算，这不是很棒吗

59
00:03:28,208 --> 00:03:30,208
又或者，如果有工具帮助……记录用户故事都有什么，

60
00:03:30,210 --> 00:03:36,210
这不是很好吗。

61
00:03:36,216 --> 00:03:39,216
于是这家公司Pivotal Lab就开发了名为Pivotal追踪器的这个工具，

62
00:03:39,219 --> 00:03:42,219
它只是用户故事花朵的养蜂房而已，

63
00:03:42,222 --> 00:03:45,222
不过只要你保持记录你完成了多少个

64
00:03:45,225 --> 00:03:48,225
用户故事，关于这些用户故事还有多少相关点， 

65
00:03:48,228 --> 00:03:52,228
我们就能计算你的速度，如果你记入

66
00:03:52,232 --> 00:03:54,232
一些东西，像是你想什么时候发布点东西，我们可以猜猜看

67
00:03:54,234 --> 00:03:58,234
这需要多少时间。要理解这里的窗口可能有点难， 

68
00:03:58,238 --> 00:04:02,238
Pivotal追踪器其实就是这个……阿曼多上次提到它时

69
00:04:02,242 --> 00:04:04,242
是在这个实验室，专门处理世界上

70
00:04:04,244 --> 00:04:07,244
所有项目的地方，就1数据库运行这个工具，

71
00:04:07,247 --> 00:04:10,247
它并非沉重的负担，设有网络浏览器间期， 

72
00:04:10,250 --> 00:04:14,250
其中每一个功能都有单独的面板。所以1是当前值，

73
00:04:14,254 --> 00:04:17,254
就是中间的这一个。这是人们正在处理的用户故事，

74
00:04:17,257 --> 00:04:19,257
这有点难……这个很难看到， 

75
00:04:19,259 --> 00:04:22,259
不过这个有点蓝的东西

76
00:04:22,262 --> 00:04:27,262
是处理中每个故事的点数。其他面板有……

77
00:04:27,267 --> 00:04:30,267
这儿有未显示的待办事项面板，

78
00:04:30,270 --> 00:04:32,270
有冰库，就是随便放置的用户故事，

79
00:04:32,272 --> 00:04:36,272
要是你有后背工作量，这会冷藏很长一段时间。

80
00:04:36,276 --> 00:04:38,276
这儿是实际完成的事项，你实际完成的东西，

81
00:04:38,278 --> 00:04:42,278
可以放在那儿。这显示……还有

82
00:04:42,282 --> 00:04:45,282
这个组是……角落里的这个数字显示

83
00:04:45,285 --> 00:04:49,285
这个组的速度是多少，所以使用中的每次迭代都是10点。

84
00:04:49,289 --> 00:04:53,289
这对我们来说真的很简单，我想

85
00:04:53,293 --> 00:04:57,293
课上每个尝试使用的同学都会

86
00:04:57,297 --> 00:05:00,297
开始使用这个工具。在这里有个想法就体现在这些中的各个窗口，

87
00:05:00,000 --> 00:05:04,300
这些采用优先级顺序排列，Pivotal 

88
00:05:04,304 --> 00:05:07,304
追踪器实际上做的是在采取自动

89
00:05:07,307 --> 00:05:09,307
顺序时自动从待办事项取出事项，在你结束该事项时， 

90
00:05:09,309 --> 00:05:15,309
会弹出计划处理的下一个用户故事，

91
00:05:15,315 --> 00:05:20,315
因为这就是优先顺序。这个是Pivotal追踪器。

92
00:05:20,320 --> 00:05:24,320
我想我已经讲过这些东西了。你要怎样完成它？我想这要讲一讲。

93
00:05:24,324 --> 00:05:28,324
这样就完成了[无声 00:05:25]面板，

94
00:05:28,328 --> 00:05:29,328
你甚至可以贴入发布点，你想想内容或发布，

95
00:05:29,329 --> 00:05:32,329
这样在完成所有用户故事时， 

96
00:05:32,332 --> 00:05:35,332
我会重新发布一次，大家可以计算分点发布的时间。

97
00:05:35,335 --> 00:05:38,335
从我们开始讲解本书起他们新增了一部分内容， 

98
00:05:38,338 --> 00:05:41,338
他们称其为史诗面板（Epic  Panel），借助该工具， 

99
00:05:41,341 --> 00:05:45,341
你可以将相关的一堆用户故事放在一起，这是因为他们发现

100
00:05:45,345 --> 00:05:49,345
想要的某个重要功能。

101
00:05:49,349 --> 00:05:52,349
由于它们独立于待办事项，你也可使用Epics工具。

102
00:05:52,352 --> 00:05:56,352
这有哪些特点？一旦设定，就不由开发者决定。

103
00:05:56,356 --> 00:06:00,356
你可以想象一下……

104
00:06:00,000 --> 00:06:04,360
在我看来这点很不错，直击重点。所以它们借鉴了

105
00:06:04,364 --> 00:06:08,364
产品所有人的Scrum想法，所以在Scrum中，如果使用Scrum主文件， 

106
00:06:08,368 --> 00:06:11,368
则你团队成员中的1与他们中的一个都是产品所有人，

107
00:06:11,371 --> 00:06:14,371
所以这个想法是在你退出登录前，你可以说我认为已经完成了，

108
00:06:14,374 --> 00:06:18,374
产品所有人看一遍，然后如果

109
00:06:18,378 --> 00:06:23,378
产品所有人认定体现了他的观点，

110
00:06:23,383 --> 00:06:27,383
他认定已完成故事，就将其标记为完成，如果他拒绝，那么对不起，

111
00:06:27,387 --> 00:06:29,387
这还不行，那你就得回来继续处理。

112
00:06:29,389 --> 00:06:32,389
所以这不完全取决于完成各项的开发者。

113
00:06:32,392 --> 00:06:37,392
Pivotal追踪器多少有点喜欢使用spikes和类似的工具。

114
00:06:37,397 --> 00:06:39,397
它们具有2个不同的内容，即可向客户

115
00:06:39,399 --> 00:06:43,399
提供商业价值的功能或用户故事。

116
00:06:43,403 --> 00:06:49,403
我们添加一点，你必须获得同意，我们在检查页面添加同意框，

117
00:06:49,409 --> 00:06:51,409
这样你就可以表示同意。所以存在与此有关的

118
00:06:51,411 --> 00:06:54,411
点数，评价客户，这些都是功能。

119
00:06:54,414 --> 00:06:56,414
还有一些名为Chores（杂项）的工具，有它们你可以

120
00:06:56,416 --> 00:07:00,416
追踪团队待做的工作。所以它们是必要工具，

121
00:07:00,000 --> 00:07:04,420
不过不会就客户规定任何显见的数值，像是

122
00:07:04,424 --> 00:07:07,424
查明测试套件过低的原因。好啦。

123
00:07:07,427 --> 00:07:12,427
没有哪个点和这相关联。现在作为团队要完成这项工作，

124
00:07:12,432 --> 00:07:15,432
除了追踪正在进行中的工作，你还需要工作的空间，

125
00:07:15,435 --> 00:07:19,435
我这就为大家讲解。借助Pivotal追踪器，你可以

126
00:07:19,439 --> 00:07:22,439
附加文件，这样你就可以使用你的故事，相关的某类文件。

127
00:07:22,442 --> 00:07:25,442
你可以知道的是，存在与你的[无声 00:07:25]相关联的wiki，

128
00:07:25,445 --> 00:07:27,445
这是团队工作的另一个地方。

129
00:07:27,447 --> 00:07:31,447
我们常常使用谷歌文件，编制图纸或

130
00:07:31,451 --> 00:07:36,451
陈述、电子报表、所有这些东西的团队，

131
00:07:36,456 --> 00:07:39,456
对这类团队来说处理它们很简单，

132
00:07:39,459 --> 00:07:43,459
如果你想要使用聊天室，打开名为篝火的原始码1， 

133
00:07:43,463 --> 00:07:46,463
在这儿你可以为你的团队[无声 00:07:44]。

134
00:07:46,466 --> 00:07:49,466
所以团队现在要处理的这些东西就是

135
00:07:49,469 --> 00:07:50,469
你要开始与客户合作的内容。

