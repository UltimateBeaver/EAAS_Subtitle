1
00:00:00,000 --> 00:00:03,000
已经讲了这么多，现在我来问一个关于实例变量及其相关内容的问题。

2
00:00:03,003 --> 00:00:08,003
假设，

3
00:00:08,008 --> 00:00:10,008
一会我会展示这并不是假设，

4
00:00:10,010 --> 00:00:13,010
假设我们真的可以在Ruby的内置字符串类上添加内容，

5
00:00:13,013 --> 00:00:17,013
这儿有一个超有用的方法，叫做curvy。

6
00:00:17,017 --> 00:00:21,017
不管字符串的大写形式包不包括curvy字符，

7
00:00:21,021 --> 00:00:25,021
curvy都会返回“true”。

8
00:00:25,025 --> 00:00:30,025
不包括curvy字符也是如此。

9
00:00:30,030 --> 00:00:32,030
不要太担心curvy的功能性。

10
00:00:32,032 --> 00:00:36,032
我想知道的是，你们将用以下哪种方法来调用它？

11
00:00:36,036 --> 00:00:40,036
你会用string.curvy调用吗？还是你会在一个字符串接收者上直接调用它？

12
00:00:40,040 --> 00:00:47,040
想一想。第一轮投票。

13
00:00:47,047 --> 00:00:52,047
哇塞，OK，好多人选绿色。

14
00:00:52,052 --> 00:00:55,052
看来你们都是有备而来。这我喜欢。

15
00:00:55,055 --> 00:00:59,055
现在来说说为什么绿色的是正确的。首先，

16
00:00:59,059 --> 00:01:01,059
我定义curvy方法的方式是什么方法关联？

17
00:01:01,061 --> 00:01:05,061
是实例方法还是类方法？在之前的定义中，

18
00:01:05,065 --> 00:01:09,065
我们知道要定义一个类方法，需要将其命名为self.方法名称，

19
00:01:09,069 --> 00:01:12,069
你也可以使用类名称。

20
00:01:12,072 --> 00:01:16,072
如果我们用的是defstring. Curvy，那就是类方法，

21
00:01:16,076 --> 00:01:19,076
但curvy的定义是实例方法，

22
00:01:19,079 --> 00:01:21,079
所以第1个选项不对，因为它是调用类方法，

23
00:01:21,081 --> 00:01:24,081
对吧？这是对接收器字符串的调用，而字符串是类。

24
00:01:24,084 --> 00:01:30,084
这几个呢？看看curvy foo. 

25
00:01:30,090 --> 00:01:34,090
Curvy的定义是没有任何参数，

26
00:01:34,094 --> 00:01:37,094
所以像第3、4选项这样的都是错的，

27
00:01:37,097 --> 00:01:41,097
因为它们想传递参数，而函数并不接受。

28
00:01:41,101 --> 00:01:43,101
另一方面，这里绿色的选项是对的，

29
00:01:43,103 --> 00:01:47,103
因为当你调用某对象的实例方法时，

30
00:01:47,107 --> 00:01:51,107
实例方法中的self值就是接收方法调用的对象的值，

31
00:01:51,111 --> 00:01:55,111
这和JAVA很像。

32
00:01:55,115 --> 00:01:59,115
如果你之前选错了，希望这个解释能帮到你。

33
00:01:59,119 --> 00:02:02,119
但你们大多数都选对了，

34
00:02:02,122 --> 00:02:03,122
好样的。

