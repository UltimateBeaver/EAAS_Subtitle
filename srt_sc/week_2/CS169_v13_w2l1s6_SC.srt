1
00:00:00,000 --> 00:00:05,000
让我们来说说团队吧。这儿有什么问题呢？首先，

2
00:00:05,005 --> 00:00:10,005
很多年前，在我的青春早年，刚进入软件行业。

3
00:00:10,010 --> 00:00:14,010
有一种超级英雄程序员。现在我们都是后英雄时期的程序员了。

4
00:00:14,014 --> 00:00:18,014
那时就是软件的王国，

5
00:00:18,018 --> 00:00:22,018
无论什么东西，在30年前，都会有一个聪明人，

6
00:00:22,022 --> 00:00:24,022
能把这个绝妙的点子做得比其他都好。

7
00:00:24,024 --> 00:00:28,024
为什么在今天不是这样了呢？为什么30年前那样的超级英雄，

8
00:00:28,028 --> 00:00:31,028
我们连一个都没有了呢？我认为只是因为，

9
00:00:31,031 --> 00:00:34,031
软件业好了太多了。功能和质量的水平都提高了，

10
00:00:34,034 --> 00:00:36,034
以至于你真的无法凭一己之力做到了。

11
00:00:36,036 --> 00:00:40,036
现在，要想有一个成功的软件工程职业生涯，

12
00:00:40,040 --> 00:00:43,040
你必须要擅长编程，这个你们大多数都已经行了。

13
00:00:43,043 --> 00:00:46,043
你必须要能跟别人相处，而且你必须要帮助团队成功感。

14
00:00:46,046 --> 00:00:52,046
第三次引用弗雷德•布鲁克斯的话：

15
00:00:52,052 --> 00:00:54,052
“失败的团队里没有赢家，成功的团队里没有败者。”

16
00:00:54,054 --> 00:00:58,054
他是在他曾经待过的北卡罗来纳大学说的，

17
00:00:58,058 --> 00:01:01,058
是关于篮球，输球的球队里没有赢家。

18
00:01:01,061 --> 00:01:04,061
如果团队输了，你是不会四处宣扬的。

19
00:01:04,064 --> 00:01:06,064
如果你进了耻辱名人堂，嘿，我在联邦调查局的案件档案放弃项目里，

20
00:01:06,066 --> 00:01:10,066
是最好的程序员，

21
00:01:10,070 --> 00:01:14,070
这写到简历里可不是什么好事。胜利的团队里没有败者，嘿，

22
00:01:14,074 --> 00:01:19,074
我参与了谷歌的创立。我只做了一个小小的工作，但是我参与了谷歌的创立。

23
00:01:19,079 --> 00:01:21,079
朋友，如果你参与了谷歌的创立，你肯定得把它写进简历里。

24
00:01:21,081 --> 00:01:24,081
会非常好的。事实证明，我有很多在运动中，在球队里的经验。

25
00:01:24,084 --> 00:01:29,084
我认为我的强处之一，就是建立团队。

26
00:01:29,089 --> 00:01:33,089
讽刺的是，我从没参与过，像足球这样或其他任何类似的，

27
00:01:33,093 --> 00:01:35,093
涉及很多团队的运动。

28
00:01:35,095 --> 00:01:41,095
我练过摔跤，高度个人化。那是在高中时。这就是我。

29
00:01:41,101 --> 00:01:47,101
这就是我，这也是我，这是50年后的一位教练，

30
00:01:47,107 --> 00:01:51,107
而这是里奇•伯恩，他站在那儿，

31
00:01:51,111 --> 00:01:54,111
我们是彼此婚礼上的伴郎，到今天我们还是好朋友。

32
00:01:54,114 --> 00:01:57,114
其中一件事是……我有非常优秀的摔跤教练。

33
00:01:57,117 --> 00:01:59,117
为了谈谈团队合作的重要性，

34
00:01:59,119 --> 00:02:02,119
即便是在像摔跤这样的个人运动中，那有点……

35
00:02:02,122 --> 00:02:04,122
直到今天都对我有影响，而且我认为

36
00:02:04,124 --> 00:02:06,124
这是我作为教员的最大优势之一。我可以让所有这些独立的教员，

37
00:02:06,126 --> 00:02:09,126
组成团队共同合作，但是基本上你……

38
00:02:09,129 --> 00:02:12,129
如果你在胜利的团队，就不会有败者，

39
00:02:12,132 --> 00:02:15,132
而你就需要这些，来搞清楚该怎么做。

40
00:02:15,135 --> 00:02:18,135
好了，那有什么其余选择呢？计划和文档有这种项目经理的风格，

41
00:02:18,138 --> 00:02:23,138
是层级式的，依赖经理，

42
00:02:23,143 --> 00:02:27,143
我们该如何组织一个敏捷团队呢？可能会没有这种经理模式。

43
00:02:27,147 --> 00:02:30,147
有其他的选项来进行这种层级式模型吗？

44
00:02:30,150 --> 00:02:34,150
这就是所谓的Scrum。Scrum是一种组织敏捷团队方式的例子。

45
00:02:34,154 --> 00:02:39,154
他们想到用两个披萨大小的团队，

46
00:02:39,159 --> 00:02:42,159
有四到九人，这个团队大小非常好，

47
00:02:42,162 --> 00:02:45,162
你不必花费很多时间进行沟通了。

48
00:02:45,165 --> 00:02:51,165
Scrum，这个名字来自于橄榄球，这运动我也玩过。原因不是这个。

49
00:02:51,171 --> 00:02:57,171
Scrum是受这些简短的日常会议的启发。

50
00:02:57,177 --> 00:03:01,177
每天在同一地点十五分钟，你到了，大概在早上9:07，

51
00:03:01,181 --> 00:03:04,181
你到那儿，然后开一个简短会议，

52
00:03:04,184 --> 00:03:07,184
只要去按照顺序轮流，回答三个问题就可以了。

53
00:03:07,187 --> 00:03:11,187
这三个问题是：你从昨天到现在做了什么，

54
00:03:11,191 --> 00:03:15,191
你今天打算做什么，其间有什么阻碍或绊脚石吗？

55
00:03:15,195 --> 00:03:17,195
你们将轮流按顺序进行，

56
00:03:17,197 --> 00:03:21,197
而其思路就是，你要试着帮助你团队里的人，

57
00:03:21,201 --> 00:03:26,201
在Scrum里，看看他们是不是有障碍，而你也许

58
00:03:26,206 --> 00:03:28,206
可以做些什么来改变你的做法，

59
00:03:28,208 --> 00:03:31,208
这样来帮助他们客服障碍，或者也许你有一些可以分享的经验。

60
00:03:31,211 --> 00:03:34,211
嘿，我之前也有过那个问题，你可以这么做。

61
00:03:34,214 --> 00:03:37,214
每天，15分钟，你每天要做什么？

62
00:03:37,217 --> 00:03:41,217
其中还有一些角色。有开发团队，

63
00:03:41,221 --> 00:03:45,221
但是这里这个人被称作Scrum Master，这个团队成员会做以下事情。

64
00:03:45,225 --> 00:03:48,225
他要发挥缓冲的作用，

65
00:03:48,228 --> 00:03:51,228
或者他或她要在团队与外界干扰之间发挥缓冲作用，

66
00:03:51,231 --> 00:03:55,231
来努力使团队保持专注，专心做手上的事情，

67
00:03:55,235 --> 00:03:57,235
而不是被分心，

68
00:03:57,237 --> 00:04:01,237
以至于去做应该做的用户需求之外的事情。

69
00:04:01,241 --> 00:04:04,241
他或她负责执行团队规定，比如你们有代码标准，

70
00:04:04,244 --> 00:04:07,244
确保所有人都遵守代码标准，

71
00:04:07,247 --> 00:04:11,247
而如果在进展过程中有什么阻碍的话，比如数据或软件的访问权限，

72
00:04:11,251 --> 00:04:15,251
Scrum Master就要来解决。另一个角色被称为产品负责人。

73
00:04:15,255 --> 00:04:18,255
这个团队成员是除了Scrum Master之外的其他人，

74
00:04:18,258 --> 00:04:21,258
要代表客户的声音，

75
00:04:21,261 --> 00:04:26,261
并帮助优先考虑客户需求。我们已经有Scrum Master来让人们保持正确方向了，

76
00:04:26,266 --> 00:04:28,266
产品负责人。

77
00:04:28,268 --> 00:04:30,268
他们会说，嘿，我也不知道……

78
00:04:30,270 --> 00:04:33,270
作为产品负责人，我认为这么做不好，

79
00:04:33,273 --> 00:04:38,273
或者我认为，这比逼迫他们去做要更好。

80
00:04:38,278 --> 00:04:41,278
我们再说一遍，交换这些角色是个很好的想法。

81
00:04:41,281 --> 00:04:45,281
在这种非正式的组织中，

82
00:04:45,285 --> 00:04:49,285
肯定是产品负责人，而且很可能是Scrum Master。现在，

83
00:04:49,289 --> 00:04:52,289
团队中会发生的一种事情就是，解决冲突。你们知道，

84
00:04:52,292 --> 00:04:55,292
对于一个特点的技术问题，会有不同的观点，认为怎样才是正确的做法。

85
00:04:55,295 --> 00:05:00,295
让我们来讨论一下解决这些冲突的一些方法吧。

86
00:05:00,000 --> 00:05:05,300
一个方法是，不从反对开始，而是从你赞同的地方开始。

87
00:05:05,305 --> 00:05:07,305
让我们开始先列出所有你赞同的地方，

88
00:05:07,307 --> 00:05:13,307
然后可能你会意识到，

89
00:05:13,313 --> 00:05:16,313
好哇，其实我们的差别并不大。

90
00:05:16,316 --> 00:05:18,316
在七到八件事里，只有一件有不同，也许这就没什么要紧了。

91
00:05:18,318 --> 00:05:24,318
另一个做法是，表达彼此的观点。

92
00:05:24,324 --> 00:05:28,324
在争论中，你们互换角色。即使你不赞同，

93
00:05:28,328 --> 00:05:32,328
你表达出另一个人的另一个想法，

94
00:05:32,332 --> 00:05:34,332
然后，另一个会换角色，拿你的观点来反驳。

95
00:05:34,334 --> 00:05:39,334
这样做的目的，是避免混淆词语或假设。

96
00:05:39,339 --> 00:05:41,339
也许争论的原因，只是因为你有着不同的假设，

97
00:05:41,341 --> 00:05:43,341
而一旦你们理解了彼此的假设，

98
00:05:43,343 --> 00:05:48,343
会发现这才是冲突的真正原因。

99
00:05:48,348 --> 00:05:52,348
因特尔实际上欢迎冲突。他们有着所谓而的建设性对抗。

100
00:05:52,352 --> 00:05:57,352
如果你有一个因特尔的蓝色徽章，

101
00:05:57,357 --> 00:06:01,357
是因特尔员工，那么在第一天你就会被告知，

102
00:06:01,361 --> 00:06:04,361
如果你持有一个强烈的观点，认为有人在提出技术性错误的话，

103
00:06:04,364 --> 00:06:08,364
而不是商业性的，但是是技术性的。

104
00:06:08,368 --> 00:06:10,368
那么你有义务通过你的徽章说出来，或者我会说出来。

105
00:06:10,370 --> 00:06:14,370
即便对方是公司总裁。这就是建设性对抗。

106
00:06:14,374 --> 00:06:17,374
听起来不错。可以让很多人学着去检验想法。

107
00:06:17,377 --> 00:06:21,377
这可能导致问题。他们也有另一部分的文化，

108
00:06:21,381 --> 00:06:25,381
就是不同意和承诺。一旦作出决定，

109
00:06:25,385 --> 00:06:29,385
那么就会有两个人。一个可能是对的，一个是错的，

110
00:06:29,389 --> 00:06:32,389
你需要支持那个人，接受它，然后继续前进，而基本上，

111
00:06:32,392 --> 00:06:36,392
不管我们怎么说，我仍然不会同意。基本上，你仍然是错的，

112
00:06:36,396 --> 00:06:40,396
但是我反对，但是即使我不赞同我也会支持的。我不是必须赞同才会帮忙的，

113
00:06:40,400 --> 00:06:42,400
但是我必须帮忙，因为我希望称为团队中的一员。

114
00:06:42,402 --> 00:06:45,402
我就在想着这些事，我和我妻子庆祝我们的结婚46周年纪念日，

115
00:06:45,405 --> 00:06:49,405
大概是周三，

116
00:06:49,409 --> 00:06:51,409
或许这个冲突的事情在未来的职业生涯中会有帮助。

117
00:06:51,411 --> 00:06:56,411
有可能，当你结婚了，

118
00:06:56,416 --> 00:06:58,416
你们可能不会永远看法完全一致，那么如果你善于解决冲突的话……

119
00:06:58,418 --> 00:07:01,418
这是……软件工程可以改善你的个人生活。

120
00:07:01,421 --> 00:07:05,421
天哪，你可以把这些冲突处理得非常好。

121
00:07:05,425 --> 00:07:09,425
你是怎么做的？好吧，我也是一个软件工程师。

122
00:07:09,429 --> 00:07:16,429
当然了。总结Scrum，基本就是一种自组织团队的方针，

123
00:07:16,436 --> 00:07:19,436
其中的重头是15分钟的问题，

124
00:07:19,439 --> 00:07:23,439
15分钟的会议，在会议上，你要回答这些问题，

125
00:07:23,443 --> 00:07:26,443
你昨天做了什么，你今天打算做什么，

126
00:07:26,446 --> 00:07:29,446
有没有什么困难，然后你们有两种角色，

127
00:07:29,449 --> 00:07:32,449
产品负责人和Scrum Master，要进行互换，

128
00:07:32,452 --> 00:07:34,452
这样所有人都有尝试的机会了。

