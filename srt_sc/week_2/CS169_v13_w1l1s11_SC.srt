1
00:00:00,000 --> 00:00:02,000
好了，关于生产力哪一种说法是正确的

2
00:00:02,002 --> 00:00:08,002
使用复制和粘贴代码也是一种好方法。

3
00:00:08,008 --> 00:00:11,008
我想笑声应该算是一个提示。哈。通过四个生产力原因的程序结合，

4
00:00:11,011 --> 00:00:15,011
元编程有助于生产力，

5
00:00:15,015 --> 00:00:19,015
对于高级语言的一个主要原因，是重用简洁的语法，

6
00:00:19,019 --> 00:00:22,019
更有可能使你产生漏洞，也易于维护。

7
00:00:22,022 --> 00:00:30,022
所以你们可能在想，这个有点难啊。

8
00:00:30,030 --> 00:00:34,030
那么哪个是正确的呢，对的永远不会错，对吧。

9
00:00:34,034 --> 00:00:44,034
各就各位，预备，好了，投票。哇，这真是，我觉得这个班

10
00:00:44,044 --> 00:00:49,044
真比我们教的其他班聪明。好了，哇，

11
00:00:49,049 --> 00:00:55,049
你们所有人，好的，你们大概90%都选了蓝色。

12
00:00:55,055 --> 00:01:01,055
所以，对了，元编程有助于生产力，可能重用并不是高级语言的主要原因，

13
00:01:01,061 --> 00:01:04,061
可能主要原因在于简洁，

14
00:01:04,064 --> 00:01:08,064
而简洁可能导致漏洞更少。幸运的是，

15
00:01:08,068 --> 00:01:12,068
所有人都笑话复制粘贴。

16
00:01:12,072 --> 00:01:15,072
但这其实是关于复制粘贴的再用文化的一部分，

17
00:01:15,075 --> 00:01:19,075
这就是，有一句话叫做，不要重复自己。或者如果是干的我们就会用。

18
00:01:19,079 --> 00:01:22,079
这是个来自亨特和托马斯他们的计划，

19
00:01:22,082 --> 00:01:24,082
每一点知识都必须来自系统里的确切的权威代表。

20
00:01:24,084 --> 00:01:27,084
所以，你们打算重构代码，

21
00:01:27,087 --> 00:01:31,087
那么就只有一个地方需要复制粘贴了。那么，这里是我们的测试。

22
00:01:31,091 --> 00:01:38,091
好，总结一下出色的表现，总的来说，今天我们发现这个班，

23
00:01:38,098 --> 00:01:43,098
学到的东西，通过部署，将会是世界上最好的工作，

24
00:01:43,103 --> 00:01:47,103
而且将用一款真正的软件取得真正的用户。

25
00:01:47,107 --> 00:01:51,107
可以让开发者、用户少些麻烦的软件服务，

26
00:01:51,111 --> 00:01:53,111
服务器在架构之中，

27
00:01:53,113 --> 00:02:00,113
这也使得它易于重用目前的代码。

28
00:02:00,000 --> 00:02:04,120
这个规模的仓库计算要便宜得多，所以你们可以把它转售，

29
00:02:04,124 --> 00:02:08,124
用于效用计算和测试问题，软件的质量，

30
00:02:08,128 --> 00:02:11,128
软件质量是指不仅对于客户好，而且对于开发者也好。

31
00:02:11,131 --> 00:02:14,131
产品测试则是我们做到这一点，好的，做到这一点方式。

32
00:02:14,134 --> 00:02:14,134


